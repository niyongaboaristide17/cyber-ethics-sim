input {
  mongodb {
    uri => 'mongodb://mongo:27017/cyber_ethics'
    placeholder_db_dir => '/usr/share/logstash/mongodb_placeholders'
    placeholder_db_name => 'logstash_sqlite.db'
    collection => 'scenarios'
    batch_size => 500
    parse_method => 'simple'
    codec => "json"
  }
}

filter {
  mutate {
    rename => { "_id" => "mongo_id" }  # to avoid conflict with Elasticsearch internal _id
    convert => {
      "views" => "integer"
      "likes" => "integer"
      "published" => "boolean"
      "isAIgenerated" => "boolean"
      "isFeatured" => "boolean"
      "editable" => "boolean"
    }
  }

  # Optional: flatten decisions array (just index optionText for search, for example)
  if [decisions] {
    ruby {
      code => "
        event.set('decision_texts', event.get('decisions').map { |d| d['optionText'] })
      "
    }
  }
}

output {
  elasticsearch {
    hosts => ["http://elasticsearch:9200"]
    index => "scenarios"
    document_id => "%{mongo_id}"
  }

  stdout {
    codec => rubydebug
  }
}
